name:  Integration tests

on:
  workflow_dispatch:
    inputs:
      outOfProc:
        required:  true
        default:  true
        description:  'Execute Mirror Lake Kusto out-of-proc:  true or false'
      testFilter:
        required:  true
        default:  "MirrorLakeKusto"
        description:  'String to look for in test'

jobs:
  linux:
    runs-on: ubuntu-latest
    
    env:
      # See OS catalog here:  https://docs.microsoft.com/en-us/dotnet/core/rid-catalog
      dotnetOs:  linux-x64
      exec:  mirror-lake-kusto
      dbPrefix:  github_linux

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.x
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-restore
    - name: Install dependencies
      shell:  bash
      run: dotnet restore code
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-build
    - name: Build
      shell:  bash
      run: dotnet build code --configuration Release --no-restore
    # See https://github.com/dotnet/designs/blob/main/accepted/2020/single-file/design.md#user-experience
    # & https://docs.microsoft.com/en-us/dotnet/core/deploying/single-file
    # & https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-publish
    - name: Build single file executable
      shell:  bash
      run: |
        if [ ${{ github.event.inputs.outOfProc }} == "true" ]
        then
          execPath="$(pwd)/bin/$exec"
          echo "mlkSingleExecPath=$execPath" >> $GITHUB_ENV

          dotnet publish code/mirror-lake-kusto -c release -r $dotnetOs \
            -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true \
            -p:PublishTrimmed=true -p:PublishReadyToRun=true \
            -o bin
        fi
    # Set environment variables
    - name: Set environment variables
      shell:  bash
      run: |
        echo "mlkIngestionUri=${{ secrets.mlkIngestionUri }}" >> $GITHUB_ENV
        echo "mlkTenantId=${{ secrets.mlkTenantId }}" >> $GITHUB_ENV
        echo "mlkSpId=${{ secrets.mlkSpId }}" >> $GITHUB_ENV
        echo "mlkSpSecret=${{ secrets.mlkSpSecret }}" >> $GITHUB_ENV
        echo "mlkSparkPoolName=${{ secrets.mlkSparkPoolName }}" >> $GITHUB_ENV
        echo "mlkSparkEndpoint=${{ secrets.mlkSparkEndpoint }}" >> $GITHUB_ENV
        echo "mlkContainerUrl=${{ secrets.mlkContainerUrl }}" >> $GITHUB_ENV
        echo "mlkSubscriptionId=${{ secrets.mlkSubscriptionId }}" >> $GITHUB_ENV
        echo "mlkResourceGroup=${{ secrets.mlkResourceGroup }}" >> $GITHUB_ENV
        echo "mlkCluster=${{ secrets.mlkCluster }}" >> $GITHUB_ENV
        echo "mlkDbPrefix=$dbPrefix" >> $GITHUB_ENV
    # See https://docs.microsoft.com/en-us/dotnet/core/tools/dotnet-test
    - name: ADX-based integration tests (out-of-proc)
      shell:  bash
      run: |
        if [ ${{ github.event.inputs.testFilter }} == "" ]
        then
          dotnet test code/MirrorLakeKustoTest \
          --configuration Release --no-build --verbosity normal
        else
          testFilter="FullyQualifiedName~${{ github.event.inputs.testFilter }}"

          echo "Test filter:  '$testFilter'"

          dotnet test code/MirrorLakeKustoTest \
          --configuration Release --no-build --verbosity normal \
          --filter "$testFilter"
        fi

